name: CD Pipeline

on:
  push:
    branches: ["main"]

env:
  DOCKERHUB_REPOSITORY: nasa-hackerton

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # ✅ 1) Checkout 코드
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ 2) Python 설정
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ✅ 3) pip 최신화 및 의존성 설치
      - name: Install dependencies
        run: |
          pip install uv
          uv sync --dev
          python -m pip install pytest pytest-cov httpx

      # ✅ 4)  테스트 실행 -> 1개만 실패해도 무조건 중단
      - name: Run tests
        run: |
          echo "테스트 스크립트 실행 (pytest)"
          uv run pytest --maxfail=1 --disable-warnings -q --rootdir=.

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Back Up Image For Rollback
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:latest || true
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:latest ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:previous || true
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:previous || true

      - name: Docker Image Build And Push
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}-dev -f Dockerfile . --push

  deploy-prod:
    needs: test-and-build
    runs-on: prod

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # ✅ 2) Docker 권한 확인 및 그룹 추가 (필요 시)
      - name: Ensure Docker permissions
        run: |
          if ! groups $USER | grep -q "\bdocker\b"; then
            echo "Adding $USER to docker group"
            sudo usermod -aG docker $USER
            echo "You need to log out and log in again or restart the runner for permissions to take effect"
          else
            echo "$USER already in docker group"
          fi
          # 임시로 sudo 없이 docker 실행 가능하도록 export
          export DOCKER_HOST=unix:///var/run/docker.sock      

      - name: Pull latest dev image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}-dev

      - name: Stop existing container if running
        run: |
          if [ $(docker ps -q -f name=nasa-hackerton) ]; then
            docker stop nasa-hackerton
            docker rm nasa-hackerton
          fi

      - name: Run container
        run: |
          docker run -d \
            --name nasa-hackerton \
            -p 8080:8000 \
            ${{ secrets.DOCKERHUB_USERNAME }}/$DOCKERHUB_REPOSITORY:${{ github.sha }}-dev